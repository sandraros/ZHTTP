<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:sap="http://www.sap.com/sapxsl" xmlns:asx="http://www.sap.com/abapxml" version="1.0">

  <xsl:strip-space elements="*"/>

  <xsl:param name="ROOT"/>

  <xsl:template match="/">
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="str">
    <xsl:text>"</xsl:text>
    <xsl:variable name="a">
    <xsl:call-template name="string-replace-all">
      <xsl:with-param name="text" select="."/>
      <xsl:with-param name="replace" select="'\'"/>
      <xsl:with-param name="by" select="'\\'"/>
    </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="string-replace-all">
      <xsl:with-param name="text" select="$a"/>
      <xsl:with-param name="replace" select="'&quot;'"/>
      <xsl:with-param name="by" select="'\&quot;'"/>
    </xsl:call-template>
    <xsl:text>"</xsl:text>
  </xsl:template>

  <xsl:template match="num">
    <xsl:value-of select="."/>
  </xsl:template>

  <xsl:template match="null">
    <xsl:text>null</xsl:text>
  </xsl:template>

  <xsl:template match="bool">
    <xsl:value-of select="."/>
  </xsl:template>

  <xsl:template match="object">
    <xsl:text>{</xsl:text>
    <xsl:for-each select="*">
      <xsl:if test="position()&gt;1">,</xsl:if>
      <xsl:text>"</xsl:text>
      <xsl:value-of select="@name"/>
      <xsl:text>":</xsl:text>
      <xsl:apply-templates select="."/>
    </xsl:for-each>
    <xsl:text>}</xsl:text>
  </xsl:template>

  <xsl:template match="array">
    <xsl:text>[</xsl:text>
    <xsl:for-each select="*">
      <xsl:if test="position()&gt;1">,</xsl:if>
      <xsl:apply-templates select="."/>
    </xsl:for-each>
    <xsl:text>]</xsl:text>
  </xsl:template>

  <!-- ============= STRING-REPLACE-ALL ============= -->
  <!-- copyright http://geekswithblogs.net/Erik/archive/2008/04/01/120915.aspx -->
  <xsl:template name="string-replace-all">
    <xsl:param name="text"/>
    <xsl:param name="replace"/>
    <xsl:param name="by"/>
    <xsl:choose>
      <xsl:when test="contains($text, $replace)">
        <xsl:value-of select="substring-before($text,$replace)"/>
        <xsl:value-of select="$by"/>
        <xsl:call-template name="string-replace-all">
          <xsl:with-param name="text" select="substring-after($text,$replace)"/>
          <xsl:with-param name="replace" select="$replace"/>
          <xsl:with-param name="by" select="$by"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$text"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

</xsl:transform>

